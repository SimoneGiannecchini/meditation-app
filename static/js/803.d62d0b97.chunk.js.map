{"version":3,"file":"static/js/803.d62d0b97.chunk.js","mappings":"qMAMA,MAwEA,EAxEcA,KACZ,MAAMC,GAAOC,EAAAA,EAAAA,IAAQC,EAAAA,GACfC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEVC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC5BK,EAASC,IAAcN,EAAAA,EAAAA,UAASO,KAAKC,QAG5CC,EAAAA,EAAAA,YAAU,KAAO,IAADC,EACI,QAAlBA,EAAId,EAASe,aAAK,IAAAD,GAAdA,EAAgBE,QAClBb,EAAS,IACTG,EAAY,IACZI,EAAWC,KAAKC,OAClB,GACC,CAACZ,IAeJ,OACEiB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC9BC,EAAAA,EAAAA,MAAA,QAEEF,UAAU,aACVG,SAlBcC,UAClBC,EAAEC,iBACFhB,EAAS,IAET,UACQiB,EAAAA,EAAAA,IAA2B9B,EAAMO,EAAOG,GAC9CP,EAAS,cACX,CAAE,MAAO4B,GACPC,QAAQpB,MAAM,mBAAoBmB,EAAIE,KAAMF,EAAIG,SAChDrB,EAAS,yBACX,GASIsB,aAAa,MAAKX,SAAA,EAElBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,UACHZ,IAASU,EAAAA,EAAAA,KAAA,KAAGC,UAAU,YAAWC,SAAEZ,KAEpCU,EAAAA,EAAAA,KAAA,SACEc,KAAK,QACLC,YAAY,QACZC,MAAO/B,EACPgC,SAAWX,GAAMpB,EAASoB,EAAEY,OAAOF,OACnCH,aAAa,MACbM,UAAQ,KAGVnB,EAAAA,EAAAA,KAAA,SACEc,KAAK,WACLC,YAAY,WACZC,MAAO5B,EACP6B,SAAWX,GAAMjB,EAAYiB,EAAEY,OAAOF,OACtCH,aAAa,eACbM,UAAQ,KAGVnB,EAAAA,EAAAA,KAAA,UAAQc,KAAK,SAAQZ,SAAC,YAEtBC,EAAAA,EAAAA,MAAA,KAAGiB,MAAO,CAAEC,UAAW,UAAWnB,SAAA,CAAC,wBACbF,EAAAA,EAAAA,KAACsB,EAAAA,GAAI,CAACC,GAAG,YAAYC,MAAM,gBAAetB,SAAC,oBA7B5DV,IAiCH,C","sources":["pages/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport app from \"../assets/firebaseConfig\";\r\nimport { useNavigate, useLocation, Link } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = () => {\r\n  const auth = getAuth(app);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [formKey, setFormKey] = useState(Date.now()); \r\n\r\n  \r\n  useEffect(() => {\r\n    if (location.state?.reset) {\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      setFormKey(Date.now()); \r\n    }\r\n  }, [location]);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    try {\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      navigate(\"/meditation\"); \r\n    } catch (err) {\r\n      console.error(\"Errore di login:\", err.code, err.message);\r\n      setError(\"Credenziali non valide\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form\r\n        key={formKey}\r\n        className=\"login-form\"\r\n        onSubmit={handleLogin}\r\n        autoComplete=\"off\"\r\n      >\r\n        <h2>Login</h2>\r\n        {error && <p className=\"error-msg\">{error}</p>}\r\n\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          autoComplete=\"off\"\r\n          required\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          autoComplete=\"new-password\"\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\">Accedi</button>\r\n\r\n        <p style={{ textAlign: \"center\" }}>\r\n          Non hai un account? <Link to=\"/register\" class=\"register-link\">Registrati</Link>\r\n        \r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["Login","auth","getAuth","app","navigate","useNavigate","location","useLocation","email","setEmail","useState","password","setPassword","error","setError","formKey","setFormKey","Date","now","useEffect","_location$state","state","reset","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","signInWithEmailAndPassword","err","console","code","message","autoComplete","type","placeholder","value","onChange","target","required","style","textAlign","Link","to","class"],"sourceRoot":""}